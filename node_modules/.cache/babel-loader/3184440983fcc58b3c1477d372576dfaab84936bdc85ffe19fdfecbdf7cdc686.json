{"ast":null,"code":"var _jsxFileName = \"/home/hello/Desktop/Github/25--react-projects/src/components/accordian/index.jsx\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport data from './data';\nimport './style.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Accordian = () => {\n  _s();\n  const [selection, setSelection] = useState(null);\n  const [enableMultiSelection, setEnableMultiSelection] = useState(false);\n  const [multipleSelected, setMultipleSelected] = useState([]);\n  function handleSingleSelection(getCurrentId) {\n    setSelection(getCurrentId === selection ? null : getCurrentId);\n  }\n  function handleMultipleSelection(getCurrentId) {\n    let copyMultiple = [...multipleSelected];\n    const findIndexOfCurrentId = copyMultiple.indexOf(getCurrentId);\n    if (findIndexOfCurrentId === -1) copyMultiple.push(getCurrentId);else copyMultiple.splice(findIndexOfCurrentId, 1);\n    setMultipleSelected(copyMultiple);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"wrapper\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        setEnableMultiSelection(!enableMultiSelection);\n      },\n      children: \" Enable Multi Selection\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"accordian\",\n      children: data && data.length > 0 ? data.map(dataValue => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"item\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"question\",\n            onClick: enableMultiSelection ? () => handleMultipleSelection(dataValue.id) : () => handleSingleSelection(dataValue.id),\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: dataValue.question\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"+\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 17\n          }, this), selection === dataValue.id || multipleSelected ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"answer\",\n            children: dataValue.answer\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 68\n          }, this) : \"\"]\n        }, dataValue.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 22\n        }, this);\n      }) : /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Nothing found\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 16\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n_s(Accordian, \"RDKsQRcqDMISElA4GfU/cSgp9Kw=\");\n_c = Accordian;\nexport default Accordian;\nvar _c;\n$RefreshReg$(_c, \"Accordian\");","map":{"version":3,"names":["useState","data","jsxDEV","_jsxDEV","Accordian","_s","selection","setSelection","enableMultiSelection","setEnableMultiSelection","multipleSelected","setMultipleSelected","handleSingleSelection","getCurrentId","handleMultipleSelection","copyMultiple","findIndexOfCurrentId","indexOf","push","splice","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","length","map","dataValue","id","question","answer","_c","$RefreshReg$"],"sources":["/home/hello/Desktop/Github/25--react-projects/src/components/accordian/index.jsx"],"sourcesContent":["import { useState } from \"react\"\nimport data from './data'\nimport './style.css'\n\nconst Accordian = () => {\n  const [selection, setSelection] = useState(null)\n  const [enableMultiSelection, setEnableMultiSelection] = useState(false)\n  const [multipleSelected, setMultipleSelected] = useState([])\n\n  function handleSingleSelection(getCurrentId) {\n    setSelection(getCurrentId === selection ? null : getCurrentId)\n  }\n\n  function handleMultipleSelection(getCurrentId) {\n    let copyMultiple = [...multipleSelected]\n    const findIndexOfCurrentId = copyMultiple.indexOf(getCurrentId)\n    if (findIndexOfCurrentId === -1) copyMultiple.push(getCurrentId)\n    else copyMultiple.splice(findIndexOfCurrentId, 1)\n\n    setMultipleSelected(copyMultiple)\n  }\n  return (\n    <div className=\"wrapper\">\n      <button onClick={() => {\n        setEnableMultiSelection(!enableMultiSelection)\n      }}> Enable Multi Selection</button>\n      <div className=\"accordian\">\n        {\n          data && data.length > 0 ? (\n            data.map((dataValue) => {\n              return <div className=\"item\" key={dataValue.id}>\n                <div className=\"question\"\n                  onClick={enableMultiSelection ?\n                    () => handleMultipleSelection(dataValue.id) :\n                    () => handleSingleSelection(dataValue.id)}>\n                  <h3>{dataValue.question}</h3>\n                  <span>+</span>\n                </div>\n                {\n                  selection === dataValue.id  || multipleSelected? <div className=\"answer\">{dataValue.answer}</div> : \"\"\n                }\n              </div>\n            })\n          ) : (<h3>Nothing found</h3>)\n        }\n      </div>\n    </div>\n  )\n}\n\nexport default Accordian"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}